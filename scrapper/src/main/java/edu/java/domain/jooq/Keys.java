/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooq;

import edu.java.domain.jooq.tables.Chat;
import edu.java.domain.jooq.tables.ChatUrl;
import edu.java.domain.jooq.tables.Url;
import edu.java.domain.jooq.tables.records.ChatRecord;
import edu.java.domain.jooq.tables.records.ChatUrlRecord;
import edu.java.domain.jooq.tables.records.UrlRecord;
import javax.annotation.processing.Generated;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> CONSTRAINT_1 =
        Internal.createUniqueKey(Chat.CHAT, DSL.name("CONSTRAINT_1"), new TableField[] {Chat.CHAT.ID}, true);
    public static final UniqueKey<ChatUrlRecord> CONSTRAINT_8 = Internal.createUniqueKey(ChatUrl.CHAT_URL,
        DSL.name("CONSTRAINT_8"),
        new TableField[] {ChatUrl.CHAT_URL.URL_ID, ChatUrl.CHAT_URL.CHAT_ID},
        true
    );
    public static final UniqueKey<UrlRecord> CONSTRAINT_14 =
        Internal.createUniqueKey(Url.URL, DSL.name("CONSTRAINT_14"), new TableField[] {Url.URL.ID}, true);
    public static final UniqueKey<UrlRecord> UNIQUE_URL =
        Internal.createUniqueKey(Url.URL, DSL.name("UNIQUE_URL"), new TableField[] {Url.URL.URL_}, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ChatUrlRecord, ChatRecord> FK_CHAT_ID = Internal.createForeignKey(ChatUrl.CHAT_URL,
        DSL.name("FK_CHAT_ID"),
        new TableField[] {ChatUrl.CHAT_URL.CHAT_ID},
        Keys.CONSTRAINT_1,
        new TableField[] {Chat.CHAT.ID},
        true
    );
    public static final ForeignKey<ChatUrlRecord, UrlRecord> FK_URL_ID = Internal.createForeignKey(ChatUrl.CHAT_URL,
        DSL.name("FK_URL_ID"),
        new TableField[] {ChatUrl.CHAT_URL.URL_ID},
        Keys.CONSTRAINT_14,
        new TableField[] {Url.URL.ID},
        true
    );
}
